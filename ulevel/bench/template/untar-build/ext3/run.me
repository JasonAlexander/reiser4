#! /bin/sh

STAGE=$(cat stage)

FSTYPE=ext3
MOPTS=''
MPOINT=/mnt1
DEVICE=/dev/hda6
MKOPTS=''

#SRC=$TOPDIR/linux-2.4.19.tar.gz
SRC=/usr/src/kernel/v2.6/for-bench/linux-2.6.7.tar.gz
MPOINTSRC=$MPOINT/linux-2.6.7

output ---ENTERING-STAGE: $STAGE---
CONTEXT=$CONTEXT:$STAGE

ORDERED=$TEST/$FSTYPE-ordered.tar.gz
REPFILE=$TEST/report

function mount_me()
{
    do_mount $FSTYPE $DEVICE $MPOINT $MOPTS                             || die
}

function reinit()
{
    # umount may fail
    do_it umount $MPOINT 2>/dev/null
    do_mkfs  $FSTYPE $DEVICE "$MKOPTS"                                  || die
    mount_me
}

function untarbench()
{
    SRC=$1

    output UNTARing $SRC...	
    
    time \
	do_it tar zxf $SRC			                        || die
}

function buildbench()
{
    SRC=$1

    cd $SRC
    echo Building kernel $SRC...

    output Make defconfig $SRC...
    do_it make defconfig			                        || die
    output Make $SRC...
    do_it make					                        || die
}

function findbench()
{
    SRC=$1

    output Find $SRC...	
    
    time \
	do_it find $SRC -type f >/dev/null	                        || die
}

case "$STAGE" in
    INIT)
	reportheader $REPFILE
	echo FSTYPE:    $FSTYPE   >> $REPFILE
	echo MOPTS:     $MOPTS    >> $REPFILE
	echo MPOINT:    $MPOINT   >> $REPFILE
	echo DEVICE:    $DEVICE   >> $REPFILE
	echo MKOPTS:    $MKOPTS   >> $REPFILE
	echo SRC:       $SRC      >> $REPFILE

	# Prepare to untar
	mount -tramfs ramfs /mnt/ramfs                                  || die
	cp $SRC /mnt/ramfs/.

	reinit
	cd $MPOINT                                                      || die

	echo Untar timing >> $REPFILE
	untarbench /mnt/ramfs/linux-2.6.7.tar.gz 2>> $REPFILE

	# Prepare to work with ordered set
	do_it tar czf $ORDERED *                                        || die

	cd $TEST
	do_it umount $MPOINT                                            || die
	echo BUILD > stage
	systemrestart $KERNEL
    ;;
    BUILD)
	mount_me
	echo Build timing >> $REPFILE
	#readbench $MPOINT $READNUM 2>> $REPFILE
	(time buildbench $MPOINTSRC) 2>> $REPFILE

	cd $TEST
	do_it umount $MPOINT                                            || die
	echo FIND > stage
	systemrestart $KERNEL
    ;;
    FIND)
	mount_me
	echo Find timing >> $REPFILE
	(time findbench $MPOINTSRC) 2>> $REPFILE

	cd $TEST
	do_it umount $MPOINT                                            || die
	echo UNTARORDERED > stage
	systemrestart $KERNEL
    ;;

    UNTARORDERED)
	mount -tramfs ramfs /mnt/ramfs                                  || die
	cp $ORDERED /mnt/ramfs/.
	reinit
	cd $MPOINT                                                      || die

	echo Untar ordered timing >> $REPFILE
	untarbench /mnt/ramfs/$FSTYPE-ordered.tar.gz 2>> $REPFILE
	cd $TEST
	do_it umount $MPOINT                                            || die
	echo BUILDORDERED > stage
	systemrestart $KERNEL
   ;;
    BUILDORDERED)
	mount_me
	echo Build ordered timing >> $REPFILE
	(time buildbench $MPOINTSRC) 2>> $REPFILE

	cd $TEST
	do_it umount $MPOINT                                            || die
	echo FINDORDERED > stage
	systemrestart $KERNEL
    ;;
    FINDORDERED)
	mount_me
	echo Find ordered timing >> $REPFILE
	(time findbench $MPOINTSRC) 2>> $REPFILE

	cd $TEST
	do_it umount $MPOINT                                            || die
	OUTCOME=DONE
    ;;

esac
