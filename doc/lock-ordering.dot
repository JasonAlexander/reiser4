digraph locks {

size="18,10"

/* reiser4 spin locks */
tree_lock [shape=box]
dk_lock [shape=box]
jnode_lock [shape=box]
inode_guard [shape=box]
atom_lock [shape=box]
txnh_lock [shape=box]
txnmgr_lock [shape=box]
ktxnmgrd_lock [shape=box]
cbk_guard [shape=box]

//stack_lock [shape=box]
//super_guard [shape=box]
//lnode_guard [shape=box]
//cksum_guard [shape=box]
//oid_guard [shape=box]
//test_lock [shape=box]
//kcond_lock [shape=box]
//fake_lock [shape=box]
//panic_guard [shape=box]
//contexts_lock [shape=box]
//pset_guard [shape=box]
//phash_guard [shape=box]

/* reiser4 long term locks */
longterm_lock
inode_rw_lock
stack_sema
flush_sema
commit_sema
delete_sema

//lnode_kcond
//ktxnmgrd_start
//ktxnmgrd_wait
//bnode_sema

/* pseudo locks */
pfault [color=pink, style=filled, peripheries=2]
kalloc [color=pink, style=filled, peripheries=2]

/* system spin locks */
mapping_i_shared_lock [label="mapping->i_shared_lock", shape=box, color=yellow, style=filled]
mapping_private_lock [label="mapping->private_lock", shape=box, color=yellow, style=filled]
mapping_page_lock [label="mapping->page_lock", shape=box, color=yellow, style=filled]
cachep_spinlock [label="cachep->spinlock", shape=box, color=yellow, style=filled]
zone_lock [label="zone->lock", shape=box, color=yellow, style=filled]
inode_lock [label="&inode_lock", shape=box, color=yellow, style=filled]
swaplock [label="&swaplock", shape=box, color=yellow, style=filled]
swap_device_lock[label="swap->device_lock", shape=box, color=yellow, style=filled]
mm_page_table_lock [label="mm->page_table_lock", shape=box, color=yellow, style=filled]
zone_lru_lock [label="zone->lru_lock", shape=box, color=yellow, style=filled]
sb_lock [label="&sb_lock", shape=box, color=yellow, style=filled]

/* system long term locks */
mm_mmap_sem [label="mm->mmap_sem", color=yellow, style=filled]
i_sem [color=yellow, style=filled]
page_lock [color=yellow, style=filled]
page_write [color=yellow, style=filled]

/* dependencies */

inode_guard->inode_lock [label="eflush_add()"]
atom_lock->jnode_lock [label="uncapture_block(),\ncapture_fuse_jnode_lists()"]
jnode_lock->txnh_lock [label="try_capture_block()"]
atom_lock->txnh_lock [label="capture_fuse_txnh_lists()"]
jnode_lock->tree_lock [label="BY DESIGN"]
tree_lock->cbk_guard [label="cbk_cache_scan_slots()"]
dk_lock->tree_lock [label="sync_dkeys()"]
txnmgr_lock->atom_lock [label="atom_dec_and_unlock(),\ntxnmgr_force_commit_all(),\ncommit_some_atoms(),\nflush_one_atom()"]
txnmgr_lock->jnode_lock [label="atom_begin_andlock()"]
/* txnmgr_lock->txnh_lock [label="atom_begin_andlock()"] already covered */
i_sem->inode_rw_lock [label="unix_file_setattr(),\nunix_file_write()"]
inode_rw_lock->delete_sema [label="shorten()"]
delete_sema->flush_sema [label="reiser4_release_reserved()"]
delete_sema->commit_sema [label="reiser4_release_reserved()"]
flush_sema->longterm_lock [label="flush_scan_left(),\nflush_allocate_znode_update(),\nflush_scan_formatted(),\nflush_pos_to_child_and_alloc()"]
longterm_lock->page_lock [label="cbk_level_lookup()"]
commit_sema->page_lock [label="submit_write()"]
pfault->mm_mmap_sem [label="handle_page_fault()"]
page_lock->pfault [label="extent_write_flow()"]
mm_mmap_sem->kalloc [label="unix_file_readpage()"]
jnode_lock->inode_guard [label="eflush_add()"]

//mm_mmap_sem->inode_rw_lock [label="unix_file_filemap_nopage()", style="dotted"]
//mm_mmap_sem->kalloc [label="DEAD2", style="dotted"]
//kalloc->jnode_lock [label="emergency_flush()"]
//longterm_lock->jnode_lock [label="longterm_unlock_znode(),\nflush_allocate_znode()"]

kalloc->ktxnmgrd_lock [label="spinlock", style=dotted]
kalloc->mapping_i_shared_lock [label="spinlock", style=dotted]

kalloc->inode_guard [label="eflush_add()"]
ktxnmgrd_lock->txnmgr_lock [label="commit_some_atoms()"]

mapping_i_shared_lock->mapping_private_lock
mapping_i_shared_lock->mapping_page_lock
mapping_page_lock->cachep_spinlock
mapping_page_lock->zone_lock
mapping_page_lock->inode_lock
mapping_page_lock->swaplock
swaplock->swap_device_lock
swap_device_lock->mm_page_table_lock
swap_device_lock->zone_lru_lock
swaplock->sb_lock
}
