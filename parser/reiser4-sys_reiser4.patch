
This adds new system call: reiser4

diff -puN arch/i386/kernel/entry.S~reiser4-sys_reiser4 arch/i386/kernel/entry.S



diff -puN arch/i386/kernel/entry.S~reiser4-sys_reiser4 arch/i386/kernel/entry.S
--- linux-2.6.11/arch/i386/kernel/entry.S~reiser4-sys_reiser4	2005-07-18 18:38:09.862507248 +0400
+++ linux-2.6.11-demidov/arch/i386/kernel/entry.S	2005-07-18 18:38:09.876505120 +0400
@@ -979,7 +979,7 @@ ENTRY(sys_call_table)
 	.long sys_mq_getsetattr
 	.long sys_kexec_load
 	.long sys_waitid
-	.long sys_ni_syscall		/* 285 */ /* available */
+	.long sys_reiser4		/* 285 */
 	.long sys_add_key
 	.long sys_request_key
 	.long sys_keyctl
diff -puN arch/um/kernel/sys_call_table.c~reiser4-sys_reiser4 arch/um/kernel/sys_call_table.c
--- linux-2.6.11/arch/um/kernel/sys_call_table.c~reiser4-sys_reiser4	2005-07-18 18:38:09.869506184 +0400
+++ linux-2.6.11-demidov/arch/um/kernel/sys_call_table.c	2005-07-18 18:38:09.877504968 +0400
@@ -268,7 +268,7 @@ syscall_handler_t *sys_call_table[] = {
 	[ __NR_mq_getsetattr ] = (syscall_handler_t *) sys_mq_getsetattr,
 	[ __NR_sys_kexec_load ] = (syscall_handler_t *) sys_ni_syscall,
 	[ __NR_waitid ] = (syscall_handler_t *) sys_waitid,
-	[ 285 ] = (syscall_handler_t *) sys_ni_syscall,
+	[ __NR_reiser4 ] = (syscall_handler_t *) sys_reiser4,
 	[ __NR_add_key ] = (syscall_handler_t *) sys_add_key,
 	[ __NR_request_key ] = (syscall_handler_t *) sys_request_key,
 	[ __NR_keyctl ] = (syscall_handler_t *) sys_keyctl,
diff -puN include/asm-i386/unistd.h~reiser4-sys_reiser4 include/asm-i386/unistd.h
--- linux-2.6.11/include/asm-i386/unistd.h~reiser4-sys_reiser4	2005-07-18 18:38:09.873505576 +0400
+++ linux-2.6.11-demidov/include/asm-i386/unistd.h	2005-07-18 18:38:09.877504968 +0400
@@ -290,7 +290,7 @@
 #define __NR_mq_getsetattr	(__NR_mq_open+5)
 #define __NR_sys_kexec_load	283
 #define __NR_waitid		284
-/* #define __NR_sys_setaltroot	285 */
+#define __NR_reiser4		285 
 #define __NR_add_key		286
 #define __NR_request_key	287
 #define __NR_keyctl		288

_
